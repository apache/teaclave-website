(function() {var type_impls = {
"sgx_types":[["<section id=\"impl-ContiguousMemory-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sgx_types/marker.rs.html#87\">source</a><a href=\"#impl-ContiguousMemory-for-%5BT;+N%5D\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"sgx_types/marker/trait.ContiguousMemory.html\" title=\"trait sgx_types::marker::ContiguousMemory\">ContiguousMemory</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sgx_types/marker/trait.ContiguousMemory.html\" title=\"trait sgx_types::marker::ContiguousMemory\">ContiguousMemory</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h3></section>","ContiguousMemory","sgx_types::types::crypto::Key128bit","sgx_types::types::crypto::Key256bit","sgx_types::types::crypto::Mac128bit","sgx_types::types::crypto::Mac256bit","sgx_types::types::quote::EpidGroupId","sgx_types::types::report2::TeeMac","sgx_types::types::urts::LaunchToken","sgx_types::types::IsvExtProdId","sgx_types::types::IsvFamilyId","sgx_types::types::Mac"],["<section id=\"impl-BytewiseEquality-for-%5BT;+N%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/sgx_types/marker.rs.html#66\">source</a><a href=\"#impl-BytewiseEquality-for-%5BT;+N%5D\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"sgx_types/marker/trait.BytewiseEquality.html\" title=\"trait sgx_types::marker::BytewiseEquality\">BytewiseEquality</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"sgx_types/marker/trait.BytewiseEquality.html\" title=\"trait sgx_types::marker::BytewiseEquality\">BytewiseEquality</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h3></section>","BytewiseEquality","sgx_types::types::crypto::Key128bit","sgx_types::types::crypto::Key256bit","sgx_types::types::crypto::Mac128bit","sgx_types::types::crypto::Mac256bit","sgx_types::types::quote::EpidGroupId","sgx_types::types::report2::TeeMac","sgx_types::types::urts::LaunchToken","sgx_types::types::IsvExtProdId","sgx_types::types::IsvFamilyId","sgx_types::types::Mac"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()